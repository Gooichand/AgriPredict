import { NextRequest, NextResponse } from 'next/server';

// Gemini API configuration
const GEMINI_API_KEY = 'AIzaSyBmYCbl9o23oNiA_rzro1h6A0KKpl8l580';
const GEMINI_API_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent';

// OpenAI configuration (if available)
const OPENAI_API_KEY = process.env.OPENAI_API_KEY;

interface ChatRequest {
  message: string;
  language: string;
  context?: string;
  conversationHistory?: Array<{
    role: 'user' | 'assistant';
    content: string;
  }>;
}

export async function POST(request: NextRequest) {
  try {
    const body: ChatRequest = await request.json();
    const { message, language, context, conversationHistory = [] } = body;

    if (!message) {
      return NextResponse.json(
        { error: 'Message is required' },
        { status: 400 }
      );
    }

    // Build conversation context
    const conversationContext = conversationHistory.length > 0 
      ? `Previous conversation:\n${conversationHistory.map(msg => `${msg.role}: ${msg.content}`).join('\n')}\n\n`
      : '';

    // Create system prompt
    const systemPrompt = `You are KisanSafe AI, an expert agricultural advisor for Indian farmers. You provide practical, actionable farming advice.

${context ? `Farm Context: ${context}\n` : ''}${conversationContext}

Guidelines:
- Respond in ${language === 'hi' ? 'Hindi (Devanagari script)' : language === 'te' ? 'Telugu' : 'English'} language
- Be friendly, encouraging, and use farmer-friendly language
- Provide specific, practical advice with numbers/quantities when relevant
- Use appropriate emojis (üåæüöúüíßüå±üå¶Ô∏èüí∞)
- Keep responses concise but informative (3-5 sentences)
- Include warnings about common mistakes
- Suggest seasonal timing when relevant
- Reference Indian farming practices and conditions

Current user question: ${message}`;

    // Try Gemini API first
    try {
      const geminiResponse = await fetch(`${GEMINI_API_URL}?key=${GEMINI_API_KEY}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          contents: [{
            parts: [{ text: systemPrompt }]
          }],
          generationConfig: {
            temperature: 0.7,
            topK: 40,
            topP: 0.95,
            maxOutputTokens: 400,
            stopSequences: []
          },
          safetySettings: [
            {
              category: 'HARM_CATEGORY_HARASSMENT',
              threshold: 'BLOCK_MEDIUM_AND_ABOVE'
            },
            {
              category: 'HARM_CATEGORY_HATE_SPEECH',
              threshold: 'BLOCK_MEDIUM_AND_ABOVE'
            }
          ]
        })
      });

      if (geminiResponse.ok) {
        const geminiData = await geminiResponse.json();
        const aiResponse = geminiData.candidates?.[0]?.content?.parts?.[0]?.text;
        
        if (aiResponse) {
          return NextResponse.json({
            response: aiResponse.trim(),
            source: 'gemini'
          });
        }
      }
    } catch (geminiError) {
      console.error('Gemini API error:', geminiError);
    }

    // Try OpenAI as fallback if available
    if (OPENAI_API_KEY) {
      try {
        const openaiResponse = await fetch('https://api.openai.com/v1/chat/completions', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${OPENAI_API_KEY}`
          },
          body: JSON.stringify({
            model: 'gpt-3.5-turbo',
            messages: [
              { role: 'system', content: systemPrompt },
              { role: 'user', content: message }
            ],
            max_tokens: 400,
            temperature: 0.7
          })
        });

        if (openaiResponse.ok) {
          const openaiData = await openaiResponse.json();
          const aiResponse = openaiData.choices?.[0]?.message?.content;
          
          if (aiResponse) {
            return NextResponse.json({
              response: aiResponse.trim(),
              source: 'openai'
            });
          }
        }
      } catch (openaiError) {
        console.error('OpenAI API error:', openaiError);
      }
    }

    // Fallback to rule-based responses
    const fallbackResponse = getFallbackResponse(message, language, context);
    
    return NextResponse.json({
      response: fallbackResponse,
      source: 'fallback'
    });

  } catch (error) {
    console.error('Chat API error:', error);
    
    return NextResponse.json(
      { 
        error: 'Internal server error',
        response: 'Sorry, I am experiencing technical difficulties. Please try again later.'
      },
      { status: 500 }
    );
  }
}

function getFallbackResponse(message: string, language: string, context?: string): string {
  const lowerInput = message.toLowerCase();
  const isHindi = language === 'hi';
  const isTelugu = language === 'te';

  // Crop-specific responses
  if (lowerInput.includes('rice') || lowerInput.includes('‡§ß‡§æ‡§®') || lowerInput.includes('‡∞µ‡∞∞‡∞ø')) {
    if (isHindi) {
      return "üåæ **‡§ß‡§æ‡§® ‡§ï‡•Ä ‡§ñ‡•á‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡•Å‡§ù‡§æ‡§µ:**\n\n‚Ä¢ **‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä**: ‡§¶‡•ã‡§Æ‡§ü ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§∏‡§¨‡§∏‡•á ‡§Ö‡§ö‡•ç‡§õ‡•Ä\n‚Ä¢ **‡§™‡§æ‡§®‡•Ä**: 3-5 ‡§∏‡•á‡§Æ‡•Ä ‡§ñ‡§°‡§º‡§æ ‡§™‡§æ‡§®‡•Ä ‡§∞‡§ñ‡•á‡§Ç\n‚Ä¢ **‡§¨‡•Ä‡§ú**: 20-25 ‡§ï‡§ø‡§≤‡•ã/‡§π‡•á‡§ï‡•ç‡§ü‡•á‡§Ø‡§∞\n‚Ä¢ **‡§ñ‡§æ‡§¶**: NPK 120:60:40 ‡§ï‡§ø‡§≤‡•ã/‡§π‡•á‡§ï‡•ç‡§ü‡•á‡§Ø‡§∞\n‚Ä¢ **‡§∏‡§Æ‡§Ø**: ‡§ú‡•Ç‡§®-‡§ú‡•Å‡§≤‡§æ‡§à ‡§Æ‡•á‡§Ç ‡§∞‡•ã‡§™‡§æ‡§à\n\n‚ö†Ô∏è **‡§∏‡§æ‡§µ‡§ß‡§æ‡§®‡•Ä**: ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§™‡§æ‡§®‡•Ä ‡§∏‡•á ‡§ú‡§°‡§º ‡§∏‡§°‡§º‡§® ‡§π‡•ã ‡§∏‡§ï‡§§‡•Ä ‡§π‡•à!";
    } else if (isTelugu) {
      return "üåæ **‡∞µ‡∞∞‡∞ø ‡∞∏‡∞æ‡∞ó‡±Å‡∞ï‡±Å ‡∞∏‡±Ç‡∞ö‡∞®‡∞≤‡±Å:**\n\n‚Ä¢ **‡∞®‡±á‡∞≤**: ‡∞Æ‡∞ü‡±ç‡∞ü‡∞ø ‡∞®‡±á‡∞≤ ‡∞â‡∞§‡±ç‡∞§‡∞Æ‡∞Ç\n‚Ä¢ **‡∞®‡±Ä‡∞∞‡±Å**: 3-5 ‡∞∏‡±Ü‡∞Ç.‡∞Æ‡±Ä ‡∞®‡∞ø‡∞≤‡∞ø‡∞ö‡∞ø‡∞® ‡∞®‡±Ä‡∞∞‡±Å\n‚Ä¢ **‡∞µ‡∞ø‡∞§‡±ç‡∞§‡∞®‡∞æ‡∞≤‡±Å**: 20-25 ‡∞ï‡∞ø‡∞≤‡±ã‡∞≤‡±Å/‡∞π‡±Ü‡∞ï‡±ç‡∞ü‡∞æ‡∞∞‡±Å\n‚Ä¢ **‡∞é‡∞∞‡±Å‡∞µ‡±Å‡∞≤‡±Å**: NPK 120:60:40 ‡∞ï‡∞ø‡∞≤‡±ã‡∞≤‡±Å/‡∞π‡±Ü‡∞ï‡±ç‡∞ü‡∞æ‡∞∞‡±Å\n‚Ä¢ **‡∞∏‡∞Æ‡∞Ø‡∞Ç**: ‡∞ú‡±Ç‡∞®‡±ç-‡∞ú‡±Ç‡∞≤‡±à‡∞≤‡±ã ‡∞®‡∞æ‡∞ü‡±ç‡∞≤‡±Å\n\n‚ö†Ô∏è **‡∞ú‡∞æ‡∞ó‡±ç‡∞∞‡∞§‡±ç‡∞§**: ‡∞é‡∞ï‡±ç‡∞ï‡±Å‡∞µ ‡∞®‡±Ä‡∞∞‡±Å ‡∞µ‡±á‡∞∞‡±ç‡∞≤‡±Å ‡∞ï‡±Å‡∞≥‡±ç‡∞≥‡∞ø‡∞™‡±ã‡∞µ‡∞ö‡±ç‡∞ö‡±Å!";
    } else {
      return "üåæ **Rice Cultivation Tips:**\n\n‚Ä¢ **Soil**: Loamy soil is best\n‚Ä¢ **Water**: Maintain 3-5cm standing water\n‚Ä¢ **Seeds**: 20-25 kg per hectare\n‚Ä¢ **Fertilizer**: NPK 120:60:40 kg/hectare\n‚Ä¢ **Timing**: Transplant in June-July\n\n‚ö†Ô∏è **Warning**: Excess water can cause root rot!";
    }
  }

  // Fertilizer responses
  if (lowerInput.includes('fertilizer') || lowerInput.includes('‡§ñ‡§æ‡§¶') || lowerInput.includes('‡∞é‡∞∞‡±Å‡∞µ‡±Å')) {
    if (isHindi) {
      return "üå± **‡§ñ‡§æ‡§¶ ‡§ï‡§æ ‡§∏‡§π‡•Ä ‡§â‡§™‡§Ø‡•ã‡§ó:**\n\n‚Ä¢ **‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§ú‡§æ‡§Ç‡§ö**: ‡§™‡§π‡§≤‡•á pH ‡§î‡§∞ NPK ‡§ú‡§æ‡§Ç‡§ö‡•á‡§Ç\n‚Ä¢ **‡§ú‡•à‡§µ‡§ø‡§ï ‡§ñ‡§æ‡§¶**: 5-10 ‡§ü‡§® ‡§ó‡•ã‡§¨‡§∞ ‡§ñ‡§æ‡§¶/‡§π‡•á‡§ï‡•ç‡§ü‡•á‡§Ø‡§∞\n‚Ä¢ **‡§∞‡§æ‡§∏‡§æ‡§Ø‡§®‡§ø‡§ï ‡§ñ‡§æ‡§¶**: ‡§´‡§∏‡§≤ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ NPK ‡§Ö‡§®‡•Å‡§™‡§æ‡§§\n‚Ä¢ **‡§∏‡§Æ‡§Ø**: ‡§¨‡•Å‡§Ü‡§à ‡§ï‡•á ‡§∏‡§Æ‡§Ø + 30-45 ‡§¶‡§ø‡§® ‡§¨‡§æ‡§¶\n\nüí° **‡§ü‡§ø‡§™**: ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§ñ‡§æ‡§¶ ‡§®‡•Å‡§ï‡§∏‡§æ‡§®‡§¶‡§æ‡§Ø‡§ï ‡§π‡•à!";
    } else if (isTelugu) {
      return "üå± **‡∞é‡∞∞‡±Å‡∞µ‡±Å‡∞≤ ‡∞∏‡∞∞‡±à‡∞® ‡∞µ‡∞æ‡∞°‡∞ï‡∞Ç:**\n\n‚Ä¢ **‡∞®‡±á‡∞≤ ‡∞™‡∞∞‡±Ä‡∞ï‡±ç‡∞∑**: ‡∞Æ‡±ä‡∞¶‡∞ü pH ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å NPK ‡∞ö‡±Ç‡∞°‡∞Ç‡∞°‡∞ø\n‚Ä¢ **‡∞∏‡±á‡∞Ç‡∞¶‡±ç‡∞∞‡±Ä‡∞Ø ‡∞é‡∞∞‡±Å‡∞µ‡±Å**: 5-10 ‡∞ü‡∞®‡±ç‡∞®‡±Å‡∞≤ ‡∞™‡±á‡∞°/‡∞π‡±Ü‡∞ï‡±ç‡∞ü‡∞æ‡∞∞‡±Å\n‚Ä¢ **‡∞∞‡∞∏‡∞æ‡∞Ø‡∞® ‡∞é‡∞∞‡±Å‡∞µ‡±Å**: ‡∞™‡∞Ç‡∞ü ‡∞™‡±ç‡∞∞‡∞ï‡∞æ‡∞∞‡∞Ç NPK ‡∞®‡∞ø‡∞∑‡±ç‡∞™‡∞§‡±ç‡∞§‡∞ø\n‚Ä¢ **‡∞∏‡∞Æ‡∞Ø‡∞Ç**: ‡∞µ‡∞ø‡∞§‡±ç‡∞§‡∞®‡∞≤ ‡∞∏‡∞Æ‡∞Ø‡∞Ç + 30-45 ‡∞∞‡±ã‡∞ú‡±Å‡∞≤ ‡∞§‡∞∞‡±ç‡∞µ‡∞æ‡∞§\n\nüí° **‡∞ö‡∞ø‡∞ü‡±ç‡∞ï‡∞æ**: ‡∞é‡∞ï‡±ç‡∞ï‡±Å‡∞µ ‡∞é‡∞∞‡±Å‡∞µ‡±Å ‡∞π‡∞æ‡∞®‡∞ø‡∞ï‡∞∞‡∞Ç!";
    } else {
      return "üå± **Smart Fertilizer Guide:**\n\n‚Ä¢ **Soil Test**: Check pH and NPK levels first\n‚Ä¢ **Organic**: 5-10 tons farmyard manure/hectare\n‚Ä¢ **Chemical**: NPK ratio based on crop needs\n‚Ä¢ **Timing**: Base dose + top dressing after 30-45 days\n\nüí° **Tip**: Over-fertilization damages crops and soil!";
    }
  }

  // Weather responses
  if (lowerInput.includes('weather') || lowerInput.includes('‡§Æ‡•å‡§∏‡§Æ') || lowerInput.includes('‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç')) {
    if (isHindi) {
      return "üå¶Ô∏è **‡§Æ‡•å‡§∏‡§Æ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ñ‡•á‡§§‡•Ä:**\n\n‚Ä¢ **‡§¨‡§æ‡§∞‡§ø‡§∂**: IMD ‡§ï‡§æ ‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§®‡•Å‡§Æ‡§æ‡§® ‡§¶‡•á‡§ñ‡•á‡§Ç\n‚Ä¢ **‡§§‡§æ‡§™‡§Æ‡§æ‡§®**: ‡§´‡§∏‡§≤ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§¨‡•Å‡§Ü‡§à ‡§ï‡§∞‡•á‡§Ç\n‚Ä¢ **‡§Ü‡§∞‡•ç‡§¶‡•ç‡§∞‡§§‡§æ**: ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡•Ä ‡§∏‡•á ‡§¨‡§ö‡§æ‡§µ ‡§ï‡•á ‡§≤‡§ø‡§è\n\nüì± **‡§ê‡§™**: ‡§Æ‡•å‡§∏‡§Æ ‡§ê‡§™ ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç!";
    } else if (isTelugu) {
      return "üå¶Ô∏è **‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£ ‡∞Ü‡∞ß‡∞æ‡∞∞‡∞ø‡∞§ ‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø‡∞Ç:**\n\n‚Ä¢ **‡∞µ‡∞∞‡±ç‡∞∑‡∞Ç**: IMD ‡∞Ö‡∞Ç‡∞ö‡∞®‡∞æ‡∞≤‡±Å ‡∞ö‡±Ç‡∞°‡∞Ç‡∞°‡∞ø\n‚Ä¢ **‡∞â‡∞∑‡±ç‡∞£‡±ã‡∞ó‡±ç‡∞∞‡∞§**: ‡∞™‡∞Ç‡∞ü ‡∞™‡±ç‡∞∞‡∞ï‡∞æ‡∞∞‡∞Ç ‡∞µ‡∞ø‡∞§‡±ç‡∞§‡∞®‡∞≤‡±Å\n‚Ä¢ **‡∞§‡±á‡∞Æ**: ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡±Å‡∞≤ ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å\n\nüì± **‡∞Ø‡∞æ‡∞™‡±ç**: ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£ ‡∞Ø‡∞æ‡∞™‡±ç ‡∞°‡±å‡∞®‡±ç‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø!";
    } else {
      return "üå¶Ô∏è **Weather-Smart Farming:**\n\n‚Ä¢ **Rainfall**: Check IMD forecasts\n‚Ä¢ **Temperature**: Time sowing according to crop needs\n‚Ä¢ **Humidity**: Monitor for disease prevention\n\nüì± **Apps**: Download weather apps for alerts!";
    }
  }

  // Market price responses
  if (lowerInput.includes('price') || lowerInput.includes('‡§≠‡§æ‡§µ') || lowerInput.includes('‡∞ß‡∞∞')) {
    if (isHindi) {
      return "üí∞ **‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§≠‡§æ‡§µ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä:**\n\n‚Ä¢ **eNAM ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤**: ‡§ë‡§®‡§≤‡§æ‡§á‡§® ‡§≠‡§æ‡§µ ‡§¶‡•á‡§ñ‡•á‡§Ç\n‚Ä¢ **‡§Æ‡§Ç‡§°‡•Ä**: ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§Æ‡§Ç‡§°‡•Ä ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§ï‡§∞ ‡§™‡•Ç‡§õ‡•á‡§Ç\n‚Ä¢ **‡§∏‡§Æ‡§Ø**: ‡§∏‡•Å‡§¨‡§π 6-10 ‡§¨‡§ú‡•á ‡§≠‡§æ‡§µ ‡§Ö‡§ö‡•ç‡§õ‡•á\n\nüìà **‡§ü‡§ø‡§™**: ‡§§‡•ç‡§Ø‡•ã‡§π‡§æ‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§Æ‡§Ø ‡§≠‡§æ‡§µ ‡§¨‡§¢‡§º‡§§‡•á ‡§π‡•à‡§Ç!";
    } else if (isTelugu) {
      return "üí∞ **‡∞Æ‡∞æ‡∞∞‡±ç‡∞ï‡±Ü‡∞ü‡±ç ‡∞ß‡∞∞‡∞≤ ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç:**\n\n‚Ä¢ **eNAM ‡∞™‡±ã‡∞∞‡±ç‡∞ü‡∞≤‡±ç**: ‡∞Ü‡∞®‡±ç‡∞≤‡±à‡∞®‡±ç ‡∞ß‡∞∞‡∞≤‡±Å ‡∞ö‡±Ç‡∞°‡∞Ç‡∞°‡∞ø\n‚Ä¢ **‡∞Æ‡∞æ‡∞∞‡±ç‡∞ï‡±Ü‡∞ü‡±ç**: ‡∞∏‡±ç‡∞•‡∞æ‡∞®‡∞ø‡∞ï ‡∞Æ‡∞æ‡∞∞‡±ç‡∞ï‡±Ü‡∞ü‡±ç‡∞≤‡±ã ‡∞Ö‡∞°‡∞ó‡∞Ç‡∞°‡∞ø\n‚Ä¢ **‡∞∏‡∞Æ‡∞Ø‡∞Ç**: ‡∞â‡∞¶‡∞Ø‡∞Ç 6-10 ‡∞ó‡∞Ç‡∞ü‡∞≤‡∞ï‡±Å ‡∞Æ‡∞Ç‡∞ö‡∞ø ‡∞ß‡∞∞‡∞≤‡±Å\n\nüìà **‡∞ö‡∞ø‡∞ü‡±ç‡∞ï‡∞æ**: ‡∞™‡∞Ç‡∞°‡±Å‡∞ó‡∞≤ ‡∞∏‡∞Æ‡∞Ø‡∞Ç‡∞≤‡±ã ‡∞ß‡∞∞‡∞≤‡±Å ‡∞™‡±Ü‡∞∞‡±Å‡∞ó‡±Å‡∞§‡∞æ‡∞Ø‡∞ø!";
    } else {
      return "üí∞ **Market Price Information:**\n\n‚Ä¢ **eNAM Portal**: Check online prices\n‚Ä¢ **Local Mandi**: Visit nearby markets\n‚Ä¢ **Timing**: Morning 6-10 AM for better rates\n\nüìà **Tip**: Prices rise during festivals!";
    }
  }

  // Default response
  const contextInfo = context ? ` ${context}` : '';
  
  if (isHindi) {
    return `ü§ñ **‡§ï‡§ø‡§∏‡§æ‡§®‡§∏‡•á‡§´ AI ‡§Ø‡§π‡§æ‡§Ç ‡§π‡•à!**${contextInfo}\n\n‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç:\n‚Ä¢ ‡§´‡§∏‡§≤ ‡§ï‡•Ä ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§î‡§∞ ‡§™‡•à‡§¶‡§æ‡§µ‡§æ‡§∞\n‚Ä¢ ‡§ñ‡§æ‡§¶-‡§™‡§æ‡§®‡•Ä ‡§î‡§∞ ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä\n‚Ä¢ ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡•Ä-‡§ï‡•Ä‡§ü ‡§ï‡§æ ‡§á‡§≤‡§æ‡§ú\n‚Ä¢ ‡§Æ‡•å‡§∏‡§Æ ‡§î‡§∞ ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§≠‡§æ‡§µ\n‚Ä¢ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç\n\n‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§∏‡§µ‡§æ‡§≤ ‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞ ‡§∏‡•á ‡§™‡•Ç‡§õ‡•á‡§Ç! üåæ`;
  } else if (isTelugu) {
    return `ü§ñ **‡∞ï‡∞ø‡∞∏‡∞æ‡∞®‡±ç‡∞∏‡±á‡∞´‡±ç AI ‡∞á‡∞ï‡±ç‡∞ï‡∞° ‡∞â‡∞Ç‡∞¶‡∞ø!**${contextInfo}\n\n‡∞®‡±á‡∞®‡±Å ‡∞Æ‡±Ä‡∞ï‡±Å ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç ‡∞ö‡±á‡∞Ø‡∞ó‡∞≤‡∞®‡±Å:\n‚Ä¢ ‡∞™‡∞Ç‡∞ü ‡∞∏‡∞Ç‡∞∞‡∞ï‡±ç‡∞∑‡∞£ ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞¶‡∞ø‡∞ó‡±Å‡∞¨‡∞°‡∞ø\n‚Ä¢ ‡∞é‡∞∞‡±Å‡∞µ‡±Å‡∞≤‡±Å-‡∞®‡±Ä‡∞∞‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞®‡±á‡∞≤ ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç\n‚Ä¢ ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡∞ø-‡∞ï‡±Ä‡∞ü‡∞ï‡∞æ‡∞≤ ‡∞ö‡∞ø‡∞ï‡∞ø‡∞§‡±ç‡∞∏\n‚Ä¢ ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞Æ‡∞æ‡∞∞‡±ç‡∞ï‡±Ü‡∞ü‡±ç ‡∞ß‡∞∞‡∞≤‡±Å\n‚Ä¢ ‡∞™‡±ç‡∞∞‡∞≠‡±Å‡∞§‡±ç‡∞µ ‡∞™‡∞•‡∞ï‡∞æ‡∞≤‡±Å\n\n‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®‡∞®‡±Å ‡∞µ‡∞ø‡∞µ‡∞∞‡∞Ç‡∞ó‡∞æ ‡∞Ö‡∞°‡∞ó‡∞Ç‡∞°‡∞ø! üåæ`;
  } else {
    return `ü§ñ **KisanSafe AI at your service!**${contextInfo}\n\nI can help you with:\n‚Ä¢ Crop care and yield improvement\n‚Ä¢ Fertilizers, irrigation, and soil health\n‚Ä¢ Disease and pest management\n‚Ä¢ Weather updates and market prices\n‚Ä¢ Government schemes and subsidies\n\nPlease ask me a specific farming question! üåæ`;
  }
}